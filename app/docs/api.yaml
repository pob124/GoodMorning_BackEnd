openapi: 3.0.3
info:
  title: Good Morning API
  version: 25.05.02
  description: Good Morning API 문서

servers:
  - url: https://goodmorning.com


paths:

  /profile/{uid}:
    get:
      summary: 프로필 조회
      description: 사용자의 프로필 정보를 조회합니다.
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 실패
          
  /profile:
    patch:
      summary: 프로필 수정
      description: 사용자의 프로필 정보를 수정합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 실패

          

  /chatrooms:
    post:
      summary: 채팅방 생성
      description: 새로운 채팅방을 생성합니다. 참여자 두 명의 좌표를 포함해야 합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatroomRequest'
      responses:
        '201':
          description: 채팅방 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chatroom'
        '400':
          description: 잘못된 요청

    get:
      summary: 활성화된 채팅방 목록 조회
      description: 현재 활성화된 채팅방 목록을 조회합니다.
      responses:
        '200':
          description: 채팅방 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chatroom'

  /chat/{roomId}:
    get:
      summary: 특정 채팅방 내 채팅 조회
      description: 채팅방 내 채팅은 누구나 조회할 수 있습니다.
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 채팅방 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chatroom'
          
        '404':
          description: 채팅방 없음
  /chatrooms/{roomId}:

    delete:
      summary: 채팅방 삭제
      description: 채팅방을 삭제합니다. 참여자만 삭제할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 삭제 성공
        '404':
          description: 채팅방 없음

  /ws/chat/{room_id}:
    get:
      summary: 채팅방 WebSocket 연결
      operationId: connectToChatRoom
      description: 클라이언트는 이 엔드포인트를 통해 지정된 채팅방(room_id)에 WebSocket 연결을 수립합니다. 연결이 수립되면, 클라이언트는 서버에 텍스트 메시지를 전송할 수 있으며, 해당 메시지는 같은 채팅방에 접속한 모든 클라이언트에게 브로드캐스트됩니다. 연결 종료 시에는 서버가 해당 클라이언트를 채팅방에서 제거하고, "사용자가 나갔습니다."라는 메시지를 브로드캐스트합니다.
      parameters:
        - name: room_id
          in: path
          required: true
          description: 채팅방의 고유 ID ( 시간 + uid 사용하여 값 생성 )
          schema:
            type: string
      responses:
        '101':
          description: WebSocket 프로토콜 업그레이드 성공 (Switching Protocols)
      x-websocket:
        protocols: [ "ws", "wss" ]
        message:
          type: string
          description: 클라이언트와 서버 간에 주고받는 텍스트 메시지
        onDisconnect:
          description: 클라이언트 연결이 종료되면, 해당 채팅방의 모든 클라이언트에 "사용자가 나갔습니다." 메시지를 브로드캐스트합니다.

  /chat/search:
    get:
      summary: 채팅방 히스토리 검색
      description: 키워드 기반으로 채팅 메시지를 검색합니다.
      security:
        - bearerAuth: []
      parameters:
    
        - name: keyword
          in: query
          required: false
          schema:
            type: string
    
      responses:
        '200':
          description: 메시지 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Coordinate:
      type: object
      properties:
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float


    Chatroom:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        participants:
          type: array
          minItems: 1
          maxItems: 2
          items:
            $ref: '#/components/schemas/UserProfile'
        connection:
          type: array
          minItems: 1
          maxItems: 2
          items:
            $ref: '#/components/schemas/Coordinate'
        createdAt:
          type: string
          format: date-time
        Message:
          type: array
          minItems: 0
          maxItems: 10
          items:
            $ref: '#/components/schemas/Message'

    UserProfile:
      type: object
      properties:
        uid:
          type: string
        nickname:
          type: string
        bio:
          type: string
        profileImageUrl:
          type: string
        likes:
          type: integer

    Message:
      type: object
      properties:
        id:
          type: string
        senderId:
          type: string
        content:
          type: string
        timestamp:
          type: string
          format: date-time
          
    CreateChatroomRequest:
      type: object
      required:
        - participants
      properties:
        title:
          type: string