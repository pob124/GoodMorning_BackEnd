server {      
    listen 80;
    server_name goodmorningkr01.duckdns.org localhost;

    # 보안 헤더 추가
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 악성 User-Agent 차단
    if ($http_user_agent ~* (zgrab|masscan|nmap|sqlmap|nikto|openvas|w3af)) {
        return 403;
    }
    
    # 악성 요청 패턴 차단
    location ~* (\.php|\.asp|\.aspx|\.jsp|\.cgi|/admin|/wp-admin|/phpmyadmin|/druid|/device\.rsp|Mozi\.m) {
        return 403;
    }
    
    # 의심스러운 쿼리 스트링 차단
    if ($query_string ~* (wget|curl|chmod|/tmp/|cmd=|eval\(|base64_decode)) {
        return 403;
    }
    
    # Rate Limiting 설정
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;
    
    # Let's Encrypt 인증을 위한 경로
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # API 프록시 (Rate Limiting 적용)
    location /api {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://web:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 추가 보안 헤더
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }

    # API 문서 프록시 (접근 제한)
    location /api/docs {
        # 내부 IP만 허용 (필요시 특정 IP로 변경)
        allow 172.18.0.0/16;
        allow 127.0.0.1;
        deny all;
        
        proxy_pass http://web:8000/api/docs;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # WebSocket 프록시
    location /api/ws/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://web:8000/api/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60s;
    }

    # PgAdmin 프록시 (강력한 접근 제한)
    location /pgadmin/ {
        # 내부 네트워크만 허용
        allow 172.18.0.0/16;
        allow 127.0.0.1;
        deny all;
        
        proxy_pass http://pgadmin:80/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Script-Name /pgadmin;
        proxy_set_header X-Scheme $scheme;
        proxy_redirect off;
        proxy_buffering off;
    }

    # 정적 파일 프록시
    location /static {
        limit_req zone=general burst=30 nodelay;
        
        proxy_pass http://web:8000/static;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # 로봇 차단
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
    }
    
    # 불필요한 파일 차단
    location ~* \.(git|svn|env|log|ini|conf|bak|old|tmp)$ {
        return 403;
    }

    # 기본 경로
    location / {
        limit_req zone=general burst=15 nodelay;
        
        proxy_pass http://web:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # 서버 정보 숨기기
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }
} 